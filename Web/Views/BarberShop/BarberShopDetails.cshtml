@using System.Globalization
@model Business.DTOs.BarberShopViewResponse

@{ Layout = "_Layout"; }

@{
    ViewData["Title"] = Model.Name;
}

@section Styles {
    <link rel="stylesheet" href="~/css/BarberShop/BarberShopDetails.css" asp-append-version="true" />
}

<div id="barbershop-details-view" class="container my-5">
    <header class="text-center mb-5">
        <h1 class="display-4 fw-bold">@Model.Name</h1>
            <p class="lead text-white-50 mb-3">
                @Model.Description
            </p>
            <p class="lead text-white-50 fs-5">
                <i class="bi bi-geo-alt-fill me-2"></i>@Model.Address, @Model.City - @Model.State
            </p>
        <div class="average-rating fs-4">
            <i class="bi bi-star-fill text-gold"></i>
            <span>@Model.AverageRating.ToString("F1")</span>
            <span class="text-white-50">(@Model.ReviewCount avaliações)</span>
        </div>
    </header>

    <div class="row g-5">
        <div class="col-lg-7">
            <div class="details-card p-0 mb-4">
                <img src="@(string.IsNullOrEmpty(Model.ProfilePicUrl) ? "https://placehold.co/800x500/212529/c5a86a?text=Sem+Foto" : Model.ProfilePicUrl)" 
                     alt="Foto da Barbearia @Model.Name" class="img-fluid rounded-top">
            </div>

            <!-- Card de Informações -->
            <div class="details-card">
                <h3 class="fw-bold mb-3">Informações</h3>
                <ul class="list-unstyled info-list">
                    @if (!string.IsNullOrEmpty(Model.WhatsApp))
                    {
                        <li><i class="bi bi-whatsapp me-3"></i>@Model.WhatsApp</li>
                    }
                    @if (!string.IsNullOrEmpty(Model.Instagram))
                    {
                        <li><i class="bi bi-instagram me-3"></i>@Model.Instagram</li>
                    }
                    @if (!string.IsNullOrEmpty(Model.BarberName))
                    {
                        <li><i class="bi bi-person-fill me-3"></i>Barbeiro: @Model.BarberName</li>
                    }
                    @if (Model.WorkingDays != null && Model.WorkingDays.Any())
                    {
                        <li><i class="bi bi-calendar-week-fill me-3"></i>Funciona: @string.Join(", ", Model.WorkingDays)</li>
                    }
                    @if (!string.IsNullOrEmpty(Model.OpeningHours) && !string.IsNullOrEmpty(Model.ClosingHours))
                    {
                        <li><i class="bi bi-clock-fill me-3"></i>Horário: @Model.OpeningHours - @Model.ClosingHours</li>
                    }
                </ul>
            </div>
        </div>

        <div class="col-lg-5">
            <!-- Card de Serviços e Preços -->
            <div class="details-card mb-4">
                <h3 class="fw-bold mb-4">Serviços e Preços</h3>
                @if (Model.OfferedServices != null && Model.OfferedServices.Any())
                {
                    <ul class="list-unstyled services-list">
                        @foreach (var offeredService in Model.OfferedServices.OrderBy(s => s.Price))
                        {
                            <li class="d-flex justify-content-between align-items-center mb-2">
                                <span>
                                    <i class="bi bi-scissors text-gold me-2"></i>
                                    @System.Text.RegularExpressions.Regex.Replace(offeredService.ServiceType, "(\\B[A-Z])", " $1")
                                </span>
                                <span class="fw-bold text-gold">
                                    @offeredService.Price.ToString("C", CultureInfo.GetCultureInfo("pt-BR"))
                                </span>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p class="text-white-50">Nenhum serviço cadastrado ainda.</p>
                }
                <a asp-controller="Service" 
                   asp-action="CreateServiceForBarberShop" 
                   asp-route-barberShopId="@Model.BarberShopId" 
                   class="btn btn-gold w-100 mt-4">
                    Agendar Horário
                </a>
            </div>

            <!-- Card de Avaliações -->
            <div class="details-card">
                <h3 class="fw-bold mb-4">Últimas Avaliações</h3>
                @if (Model.Ratings != null && Model.Ratings.Any())
                {
                    <div class="ratings-list">
                        @foreach (var rating in Model.Ratings.OrderByDescending(r => r.CreatedAt).Take(3))
                        {
                            <div class="rating-item mb-3">
                                <div class="d-flex justify-content-between">
                                    <span class="fw-bold">@rating.ClientName</span>
                                    <span class="rating-value">
                                        @rating.RatingValue.ToString("F1") <i class="bi bi-star-fill text-gold"></i>
                                    </span>
                                </div>
                                <p class="text-white-50 mb-0 fst-italic">"@rating.Comment"</p>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="text-white-50">Esta barbearia ainda não possui avaliações.</p>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/BarberShop/BarberShopDetails.js" asp-append-version="true"></script>
}
